import { useRouter } from "next/router";
import Head from "next/head";
import { gql } from "@apollo/client";
import client from "../api/client";


export async function getStaticPaths(
    ) {
      /// past the query to the url  to request data 
      // there are two funcntionalities :
      // query  : request dada or get data
      // muntation : post data 
    
      //
      const WPQL_REQUEST_URL ={query:`
      query getAllPosts {
        posts{
          nodes{
            slug
            title

          }
        }
      }
      `};
      /// fetch data fro mwordpress 
     const res= await  fetch('http://localhost:8020/admin/graphql',{
    
    
        method:'POST',
        headers:{'content-type': 'application/json'},
        body:JSON.stringify(WPQL_REQUEST_URL)
      });
      let data = await res.json();
      
      let slugs = data.data.posts.nodes;
      let paths = slugs.map(post=>  {
        return  {params:{slug:post.slug}}

      }
        );
      // console.log(dataQuery);
      return {paths,fallback:false};
    }
    
export async function getStaticProps(context){
     const WPQL_REQUEST_URL = {query:gql`
        query singlePost($id:ID!,$idType:PostIdType!){
            post(id:$id,idType:$idType){
                title
                slug
                content
                featuredImage{
                    node{
                        sourceUrl
                    }
                }
            }
        }
     `,
     variables:{
        id:context.params.slug,
        idType:"SLUG"
    }
    }
     let res =await client.query(WPQL_REQUEST_URL);

     let post = res.data.post;

     return {props:{post:post}};
     
}

const Post = ({post}) => {
    let router = useRouter();
    function createMarkup(){
        let content = post.content;
        return {_html :content}
    }
 
    return (  
        <>
        <Head>
            <title>{router.query.slug}</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className="w-full m-auto p-2">
            <h1 className="text-md font-bold text-blue-500">{post.title} page</h1>
            <div dangerouslySetInnerHTML={{__html: post.content}}/>
        </div>
        </>
    );
}
 
export default Post;